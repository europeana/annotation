<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>eu.europeana.annotation</groupId>
	<artifactId>annotation-api</artifactId>
	<version>${version.annotationApi}</version>
	<packaging>pom</packaging>
	<name>Annotation API parent</name>
	<description>Annotation API parent pom</description>


	<repositories>
		<repository>
			<id>libs-release</id>
			<name>europeana-releases</name>
			<url>https://artifactory.eanadev.org/artifactory/libs-release/</url>
		</repository>
		<repository>
			<id>libs-snapshots-local</id>
			<name>europeana-snapshots</name>
			<url>https://artifactory.eanadev.org/artifactory/libs-snapshot/</url>
		</repository>
		<!-- repo for plugins, required to resolve git-commit-id -->
		<repository>
			<id>plugins-release</id>
			<name>artifactory plugins-release</name>
			<url>https://artifactory.eanadev.org/artifactory/plugins-release</url>
		</repository>

	</repositories>


	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<version.annotationApi>0.3.4-SNAPSHOT</version.annotationApi>
		<version.europeana-search-tools>0.0.1</version.europeana-search-tools>
		<version.java>11</version.java>
		<version.org.junit.jupiter>5.7.2</version.org.junit.jupiter>

		<version.junit-platform>1.2.0</version.junit-platform>
		<!--	 can be enabled only when there is a need to change the version used by spring boot (not recommended, consider changing the spring boot version instead) 	
 		<version.spring>5.3.7</version.spring>
 		-->
		<version.spring.boot>2.5.7</version.spring.boot>
		<version.swagger>3.0.0</version.swagger>

		<version.aspectj>1.8.8</version.aspectj>
		<version.log4j2>2.17.2</version.log4j2>
		<version.commonsLang3>3.0</version.commonsLang3>
		<version.annotationld>1.1.7</version.annotationld>
		<version.codehausJackson>1.9.9</version.codehausJackson>
		<version.jackson>2.11.4</version.jackson>
		<version.jackson-jsonld>0.1.1</version.jackson-jsonld>
		<version.commonsApi>0.3.16</version.commonsApi>
		<version.apiKeyClient>1.1</version.apiKeyClient>
		<version.apacheSolr>7.7.2</version.apacheSolr>
		<version.woodstox>3.2.9</version.woodstox>
		<version.servletJstl>1.2</version.servletJstl>
		<version.slf4j>1.7.5</version.slf4j>
		<version.guava>18.0</version.guava>
		<version.gson>2.8.9</version.gson>
		<version.httpClient>3.1</version.httpClient>
		<version.saxonHE>10.1</version.saxonHE>
		<version.jaxb>2.3.1</version.jaxb>
		<version.subtitle-converter>1</version.subtitle-converter>
		<version.maven-surfire-plugin>3.0.0-M6</version.maven-surfire-plugin>
		<git-commit-id.version>5.0.0</git-commit-id.version>
        
		<skipTests>true</skipTests>

	</properties>
	<modules>
		<module>api2-common</module>
		<module>annotation-definitions</module>
		<module>annotation-utils</module>
		<module>annotation-dereferenciation</module>
		<module>annotation-mongo</module>
		<module>annotation-solr</module>
		<module>annotation-web</module>
		<module>annotation-client</module>
		<module>annotation-import</module>
		<module>annotation-fulltext</module>
		<module>annotation-statistics</module>
	</modules>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<!-- Import dependency management from Spring Boot (because we don't use Spring-Boot as parent pom)-->
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${version.spring.boot}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>


	<build>
		<!--  configure source and output locations -->
		<directory>target</directory>
		<outputDirectory>target/classes</outputDirectory>
		<!--
		<finalName>${artifactId}-${version}</finalName>
		-->
		<testOutputDirectory>target/test-classes</testOutputDirectory>
		<sourceDirectory>src/main/java</sourceDirectory>
		<!-- 
		<scriptSourceDirectory>src/main/scripts</scriptSourceDirectory>
		 -->
		<testSourceDirectory>src/test/java</testSourceDirectory>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
			</testResource>
		</testResources>

		<!--  plugins -->
		<pluginManagement>
			<plugins>
				<!--
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
				</plugin>
				 -->
				<plugin>
					<groupId>io.github.git-commit-id</groupId>
					<artifactId>git-commit-id-maven-plugin</artifactId>
					<version>${git-commit-id.version}</version>
				</plugin>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${version.spring.boot}</version>
				</plugin>	
				<plugin>
					<inherited>true</inherited>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
						<source>${version.java}</source>
						<target>${version.java}</target>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${version.maven-surfire-plugin}</version>
				</plugin>
			</plugins>
		</pluginManagement>

		<!-- plugins to run on build time -->
		<plugins>
			<plugin>
				<groupId>io.github.git-commit-id</groupId>
				<artifactId>git-commit-id-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>get-the-git-infos</id>
						<goals>
							<goal>revision</goal>
						</goals>
						<phase>initialize</phase>
					</execution>
				</executions>
				<configuration>
					<generateGitPropertiesFile>true</generateGitPropertiesFile>
					<generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
					<includeOnlyProperties>
						<includeOnlyProperty>^git.build.(time|version)$</includeOnlyProperty>
						<includeOnlyProperty>^git.commit.id.(abbrev|full)$</includeOnlyProperty>
					</includeOnlyProperties>
					<commitIdGenerationMode>full</commitIdGenerationMode>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>build-info</goal>
						</goals>
						<configuration>
							<additionalProperties>
								<project.description>${project.description}</project.description>
								<!-- For some reason BuildProperties.getName() doesn't return the correct value,
                           so we set the name under a different property                      -->
								<project.name>${project.name}</project.name>
							</additionalProperties>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>


	</build>
</project>